{"version":3,"sources":["src/engine/ext.js"],"names":[],"mappings":";;;;;;QAMgB,IAAI,GAAJ,IAAI;IALb,KAAK,2BAAM,SAAS;;AAE3B,IAAM,GAAG,GAAG,KAAK,CAAC,KAAK,EAAE,CAAA;qBACV,GAAG;AAEX,SAAS,IAAI,CAAE,IAAI,EAAE,KAAK,EAAE;AACjC,SAAO,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;CAC7B;;AAED,GAAG,CAAC,MAAM,CAAC,YAAY,EAAE,UAAU,EAAE;AACnC,OAAK,EAAE,QAAQ;AACf,MAAI,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE;CACf,CAAC,CAAA;;AAEF,GAAG,CAAC,MAAM,CAAC,YAAY,EAAE,cAAc,EAAE;AACvC,OAAK,EAAE,QAAQ;AACf,MAAI,EAAE,CAAE,CAAC,EAAE,CAAC,CAAE;AACd,MAAI,EAAE,CAAC;CACR,CAAC,CAAA;;AAEF,GAAG,CAAC,MAAM,CAAC,YAAY,EAAE,YAAY,EAAE;AACrC,OAAK,EAAE,QAAQ;AACf,QAAM,EAAE,2CAA2C;CACpD,CAAC,CAAA;;AAEF,GAAG,CAAC,MAAM,CAAC,YAAY,EAAE,UAAU,EAAE;AACnC,OAAK,EAAE,QAAQ;AACf,QAAM,EAAE,cAAc;CACvB,CAAC,CAAA;;AAEF,GAAG,CAAC,MAAM,CAAC,YAAY,EAAE,sBAAsB,EAAE;AAC/C,OAAK,EAAE,QAAQ;AACf,QAAM,EAAE,iBAAiB;CAC1B,CAAC,CAAA;;AAEF,GAAG,CAAC,MAAM,CAAC,YAAY,EAAE,eAAe,EAAE;AACxC,SAAO,EAAE;AACP,0BAAsB,EAAE,IAAI;GAC7B;CACF,CAAC,CAAA;;AAEF,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,aAAa,EAAE,UAAU,CAAC,EAAE;AACjD,MAAI,CAAC,GAAG,SAAS,CAAA;AACjB,MAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;AAC3C,KAAC,GAAG,CAAC,CAAC,MAAM,CAAA;GACb;AACD,SAAO,CAAC,CAAA;CACT,CAAC,CAAA;;IAEU,QAAQ,mCAAM,aAAa;;AAEvC,GAAG,CAAC,MAAM,CAAC,YAAY,EAAE,eAAe,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;AACxD,SAAO,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;CAC3B,CAAC,CAAA;;AAEF,GAAG,CAAC,MAAM,CAAC,YAAY,EAAE,mBAAmB,EAAE;AAC5C,iBAAe,EAAE,qBAAqB;CACvC,CAAC,CAAA","file":"src/engine/ext.js","sourcesContent":["\nimport mongo from './mongo'\n\nconst ext = mongo.clone()\nexport default ext\n\nexport function test (json, query) {\n  return ext.test(json, query)\n}\n\next.append('expansions', '$ext:int', {\n  $type: 'number',\n  $mod: [ 1, 0 ]\n})\n\next.append('expansions', '$ext:natural', {\n  $type: 'number',\n  $mod: [ 1, 0 ],\n  $gte: 0\n})\n\next.append('expansions', '$ext:email', {\n  $type: 'string',\n  $regex: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i\n})\n\next.append('expansions', '$ext:hex', {\n  $type: 'string',\n  $regex: /^[0-9A-F]+$/i\n})\n\next.append('expansions', '$ext:objectid:string', {\n  $type: 'string',\n  $regex: /^[0-9A-F]{24}$/i\n})\n\next.append('expansions', '$ext:objectid', {\n  ' $oid': {\n    '$ext:objectid:string': true\n  }\n})\n\next.append('virtuals', '$ext:length', function (a) {\n  let r = undefined\n  if (a != null && a.hasOwnProperty('length')) {\n    r = a.length\n  }\n  return r\n})\n\nimport * as strftime from '../strftime'\n\next.append('conditions', '$ext:strftime', function (a, b) {\n  return strftime.test(b, a)\n})\n\next.append('expansions', '$ext:strftime:iso', {\n  '$ext:strftime': '%Y-%m-%dT%H:%M:%S%Z'\n})\n\n// Maybe:\n// $every\n// $any\n// $sorted\n// $unique\n// $type = array\n// $date:format\n// $date:iso\n// $keys\n// $exact / $iff\n// $creditcard\n// $guid\n// $hostname http://tools.ietf.org/html/rfc1123\n// $downcase\n// $upcase\n// $trim\n"]}
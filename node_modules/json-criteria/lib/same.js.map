{"version":3,"sources":["src/same.js"],"names":[],"mappings":";;;;;QAIgB,MAAM,GAAN,MAAM;;;;qBAsBE,IAAI;IAzBhB,EAAE,mCAAM,MAAM;;AAGnB,SAAS,MAAM,CAAE,CAAC,EAAE,CAAC,EAAgB;MAAd,IAAI,gCAAG,KAAK;AACxC,MAAI,CAAC,GAAG,IAAI,CAAA;AACZ,MAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAA;AACjB,MAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAA;AACjB,MAAI,EAAE,KAAK,EAAE,EAAE;AACb,QAAI,IAAI,EAAE;AACR,OAAC,CAAC,IAAI,EAAE,CAAA;AACR,OAAC,CAAC,IAAI,EAAE,CAAA;KACT;AACD,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AAC3B,UAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;AACjB,SAAC,GAAG,KAAK,CAAA;AACT,cAAM;OACP;KACF;GACF,MAAM;AACL,KAAC,GAAG,KAAK,CAAA;GACV;AACD,SAAO,CAAC,CAAA;CACT,AAGc,SAAS,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE;AAClC,MAAI,CAAC,GAAG,KAAK,CAAA;AACb,UAAQ,IAAI;;;AAGV,SAAK,CAAC,KAAK,CAAC;AACV,OAAC,GAAG,IAAI,CAAA;AACR,YAAK;;AAAA;AAGP,SAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AAC/B,cAAQ,IAAI;;;AAGV,aAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3B,WAAC,GAAG,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,OAAO,EAAE,CAAA;AAC/B,gBAAM;;AAAA;AAGR,aAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AAC/B,WAAC,GACC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,IACrB,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,IACrB,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,SAAS,IAC3B,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,SAAS,IAC3B,CAAC,CAAC,UAAU,KAAK,CAAC,CAAC,UAAU,AAC9B,CAAA;AACD,gBAAK;;AAAA;AAGP,aAAK,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AAAC,AAChC,aAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;AAAC,AAC9B,aAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AAC/B,WAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;AAChB,gBAAK;;AAAA;AAGP;AACE,cAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AACxB,cAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AACxB,cAAI,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE;AAC1B,aAAC,GAAG,GAAG,CAAC,KAAK,CAAC,UAAC,CAAC;qBAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;aAAA,CAAC,CAAA;WACvC;AACD,gBAAK;AAAA,OACR;AACD,YAAK;AAAA,GACR;AACD,SAAO,CAAC,CAAA;CACT","file":"src/same.js","sourcesContent":["\nimport * as is from './is'\n\n// Return true if arrays are the same.\nexport function arrays (a, b, sort = false) {\n  let r = true\n  let an = a.length\n  let bn = b.length\n  if (an === bn) {\n    if (sort) {\n      a.sort()\n      b.sort()\n    }\n    for (let i = 0; i < an; i++) {\n      if (a[i] !== b[i]) {\n        r = false\n        break;\n      }\n    }\n  } else {\n    r = false\n  }\n  return r\n}\n\n// Return true if two values are the same.\nexport default function same (a, b) {\n  let r = false\n  switch (true) {\n\n    // Same scalars.\n    case a === b:\n      r = true\n      break\n\n    // Objects.\n    case is.object(a) && is.object(b):\n      switch (true) {\n\n        // Dates.\n        case is.date(a) && is.date(b):\n          r = a.getTime() === b.getTime()\n          break;\n\n        // RegExps.\n        case is.regexp(a) && is.regexp(b):\n          r = (\n            a.source === b.source &&\n            a.global === b.global &&\n            a.multiline === b.multiline &&\n            a.lastIndex === b.lastIndex &&\n            a.ignoreCase === b.ignoreCase\n          )\n          break\n\n        // Array like.\n        case is.array(a) && is.array(b):\n        case is.args(a) && is.args(b):\n        case is.buffer(a) && is.buffer(b):\n          r = arrays(a, b)\n          break\n\n        // Other objects.\n        default:\n          let aks = Object.keys(a)\n          let bks = Object.keys(b)\n          if (arrays(aks, bks, true)) {\n            r = aks.every((k) => same(a[k], b[k]))\n          }\n          break\n      }\n      break\n  }\n  return r\n}\n"]}
{"version":3,"sources":["src/engine.js"],"names":[],"mappings":"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","file":"src/engine.js","sourcesContent":["\nimport * as is from './is'\nimport same from './same'\nimport { kvs, resolve, decoded } from './utils'\n\nexport default class Engine {\n\n  constructor ({ virtuals = [], conditions = [], expansions = []} = {}) {\n    this.registry = { virtuals, conditions, expansions }\n  }\n\n  clone () {\n    return new Engine({\n      virtuals: this.registry.virtuals.slice(),\n      conditions: this.registry.conditions.slice(),\n      expansions: this.registry.expansions.slice()\n    })\n  }\n\n  append (t, k, f) {\n    this.registry[t].push([ k, f ])\n  }\n\n  prepend (t, k, f) {\n    this.registry[t].shift([ k, f ])\n  }\n\n  replace (t, k, f) {\n    let [ tk ] = this.rule(k)\n    if (tk) {\n      this.registry[tk][k] = f\n    } else {\n      this.append(t, k, f)\n    }\n  }\n\n  // Find rule with k name.\n  rule (k) {\n    let r = [ undefined, undefined ]\n    for (let [ tk, tv ] of kvs(this.registry)) {\n      for (let [ rk, rf ] of tv) {\n        if (k === rk) {\n          r = [ tk, rf ]\n          break\n        }\n      }\n    }\n    return r\n  }\n\n  test (d, q = {}) {\n    let r = true\n\n    if (is.leaf(q)) {\n\n      // Implicit equality.\n      r = r && same(d, q)\n    } else {\n      for (let [ qk, qv ] of kvs(q)) {\n        if (qk[0] === '$') {\n\n          let [ t, f ] = this.rule(qk)\n          switch (t) {\n            case 'expansions': r = r && this.test(d, f); break\n            case 'virtuals': r = r && this.test(f.bind(this)(d, qv), qv); break\n            case 'conditions': r = r && f.bind(this)(d, qv, q); break\n            default: throw new Error(`Unknown rule ${qk}`)\n          }\n\n          if (r === false) {\n            break\n          }\n        } else {\n\n          // Allow _$foo to reference $foo attributes.\n          let tqk = decoded(qk)\n          let [ dvp, dk ] = resolve(d, tqk) || []\n          if (dvp !== null && dk.length === 1) {\n\n            // ...it's resolved\n            r = r && this.test(dvp[dk[0]], qv)\n          } else {\n\n            // We can still match `{ $exists: false }`, possibly in nested\n            // `{ $or: [] }`.\n            r = r && this.test(undefined, qv)\n          }\n        }\n      }\n    }\n\n    return r\n  }\n}\n"]}